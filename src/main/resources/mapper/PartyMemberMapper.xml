<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.pkj.mapper.PartyMemberMapper">

    <resultMap id="BaseResultMap" type="com.it.pkj.domain.PartyMember">
            <id property="partyMemberId" column="party_member_id" jdbcType="INTEGER"/>
            <result property="partyMemberName" column="party_member_name" jdbcType="VARCHAR"/>
            <result property="partyMemberGender" column="party_member_gender" jdbcType="VARCHAR"/>
            <result property="partyMemberContactInformation" column="party_member_contact _information" jdbcType="VARCHAR"/>
            <result property="partyMemberJoiningDate" column="party_member_joining_date" jdbcType="DATE"/>
            <result property="partyMemberRegionId" column="party_member_region_id" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        party_member_id,party_member_name,party_member_gender,
        party_member_contact _information,party_member_joining_date,party_member_region_id
    </sql>
    <!-- 根据 ID 查找党员信息 -->
    <select id="selectById" resultType="com.it.pkj.domain.PartyMember">
        select * from partymember where party_member_id = #{id}
    </select>

    <!-- 插入党员信息 -->
    <insert id="insert" parameterType="com.it.pkj.domain.PartyMember">
        insert into partymember (party_member_name, party_member_gender, party_member_contact_information, party_member_joining_date, party_member_region_id)
        values (#{partyMemberName}, #{partyMemberGender}, #{partyMemberContactInformation}, #{partyMemberJoiningDate}, #{partyMemberRegionId})
    </insert>

    <!-- 更新党员信息 -->
    <update id="updateById" parameterType="com.it.pkj.domain.PartyMember">
        update partymember
        set party_member_name = #{partyMemberName},
            party_member_gender = #{partyMemberGender},
            party_member_contact_information = #{partyMemberContactInformation},
            party_member_joining_date = #{partyMemberJoiningDate},
            party_member_region_id = #{partyMemberRegionId}
        where party_member_id = #{partyMemberId}
    </update>

    <!-- 删除党员信息 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        delete from partymember where party_member_id = #{id}
    </delete>

    <!-- 分页查询党员信息 -->
    <select id="selectPage" resultType="com.it.pkj.domain.PartyMember">
        select * from partymember
        <where>
            <if test="ew!= null">
                <if test="ew.sqlSegment!= null and ew.sqlSegment!= ''">
                    ${ew.sqlSegment}
                </if>
            </if>
        </where>
        <if test="ew!= null and ew.orderByField!= null and ew.orderByField!= ''">
            order by ${ew.orderByField} ${ew.isAsc? 'asc' : 'desc'}
        </if>
        limit #{offset}, #{limit}
    </select>
</mapper>
